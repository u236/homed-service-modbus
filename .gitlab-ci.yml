.build:
  stage: build
  script:
  - "export PATH=\"${PATH}:/opt/gcc/${COMPILER}/bin\""
  - "export STAGING_DIR=\"/opt/gcc/${COMPILER}\""
  - "/opt/qt/${QT_BUILD}/bin/qmake homed-modbus.pro"
  - "make -j $(nproc)"
  - "cp homed-modbus homed-modbus-${ARCHITECTURE}"
  - "cp homed-modbus-${ARCHITECTURE} /var/www/sandbox.u236.org/homed-modbus"
  artifacts:
    paths:
    - "homed-modbus-*"
    expire_in: 1 day
  rules:
  - if: $CI_COMMIT_TAG =~ /^\d.\d.\d+$/ || $CI_COMMIT_TAG == "dev"
    when: always
  - when: never

.deploy_apt:
  stage: deploy
  variables:
    PACKAGE_FILE: homed-modbus_${CI_COMMIT_TAG}_${ARCHITECTURE}.deb
  script:
  - "mkdir -p deploy/data/lib/systemd/system"
  - "mkdir -p deploy/data/opt/homed-modbus"
  - "mkdir -p deploy/data/usr/bin"
  - "cp -r deploy/apt deploy/data/DEBIAN"
  - "cp deploy/systemd/homed-modbus.service deploy/data/lib/systemd/system"
  - "cp homed-modbus-${ARCHITECTURE} deploy/data/usr/bin/homed-modbus"
  - "md5deep -lr deploy/data | grep -v DEBIAN | sed \"s+deploy/data/++g\" | sort -k2 > deploy/data/DEBIAN/md5sums"
  - "sed -i \"s+^Version:.*+Version: ${CI_COMMIT_TAG}+g\" deploy/data/DEBIAN/control"
  - "sed -i \"s+^Architecture:.*+Architecture: ${ARCHITECTURE}+g\" deploy/data/DEBIAN/control"
  - "chmod +x deploy/data/DEBIAN/postinst"
  - "chmod +x deploy/data/DEBIAN/prerm"
  - "fakeroot dpkg-deb --build deploy/data"
  - "mv deploy/data.deb ${PACKAGE_FILE}"
  - "reprepro -b /var/www/apt.homed.dev -C main includedeb debian ${PACKAGE_FILE}"
  artifacts:
    paths:
    - ${PACKAGE_FILE}
    expire_in: never
  rules:
  - if: $CI_COMMIT_TAG =~ /^\d.\d.\d+$/
    when: always
  - when: never

.deploy_opkg:
  stage: deploy
  variables:
    PACKAGE_FILE: homed-modbus_${CI_COMMIT_TAG}_${ARCHITECTURE}.ipk
    FEED_DIR: /var/www/opkg.homed.dev/${ARCHITECTURE}
  script:
  - "mkdir -p deploy/data/etc/init.d"
  - "mkdir -p deploy/data/opt/homed-modbus"
  - "mkdir -p deploy/data/usr/bin"
  - "cp -r deploy/luci/* deploy/data"
  - "cp deploy/procd/homed-modbus deploy/data/etc/init.d"
  - "cp homed-modbus-${ARCHITECTURE} deploy/data/usr/bin/homed-modbus"
  - "sed -i \"s+^Version:.*+Version: ${CI_COMMIT_TAG}+g\" deploy/opkg/control"
  - "sed -i \"s+^Architecture:.*+Architecture: ${ARCHITECTURE}+g\" deploy/opkg/control"
  - "echo \"2.0\" > debian-binary"
  - "chmod +x deploy/data/etc/init.d/homed-modbus"
  - "chmod +x deploy/opkg/postinst"
  - "chmod +x deploy/opkg/prerm"
  - "fakeroot tar -czf control.tar.gz -C deploy/opkg ."
  - "fakeroot tar -czf data.tar.gz -C deploy/data ."
  - "fakeroot tar -czf ${PACKAGE_FILE} control.tar.gz data.tar.gz debian-binary"
  - "mkdir -p ${FEED_DIR}"
  - "rm -f ${FEED_DIR}/homed-modbus*"
  - "cp ${PACKAGE_FILE} ${FEED_DIR}"
  - "/opt/scripts/opkgIndex.sh ${FEED_DIR} > ${FEED_DIR}/Packages"
  - "/opt/opkg/usign -S -m ${FEED_DIR}/Packages -s /opt/opkg/opkg.key -x ${FEED_DIR}/Packages.sig"
  - "gzip -fk ${FEED_DIR}/Packages"
  artifacts:
    paths:
    - ${PACKAGE_FILE}
    expire_in: never
  rules:
  - if: $CI_COMMIT_TAG =~ /^\d.\d.\d+$/
    when: always
  - when: never

Build Linux Binary (amd64):
  extends: .build
  variables:
    ARCHITECTURE: amd64
    QT_BUILD: qt-amd64-linux-5.15.4-shared
  script:
  - "docker run --rm -u ${UID}:${UID} -v /opt/qt/${QT_BUILD}:/opt/qt/${QT_BUILD} -v ${PWD}/..:/build -w /build/homed-modbus gcc:8.3.0 bash -c \"/opt/qt/${QT_BUILD}/bin/qmake homed-modbus.pro; make -j $(nproc)\""
  - "cp homed-modbus homed-modbus-amd64"
  - "cp homed-modbus-amd64 /var/www/sandbox.u236.org/homed-modbus"

Build Linux Binary (aarch64):
  extends: .build
  variables:
    ARCHITECTURE: aarch64
    QT_BUILD: qt-aarch64-linux-gnu-5.15.4-shared
    COMPILER: gcc-aarch64-linux-gnu-8.3.0
  after_script:
  - "cp homed-modbus-aarch64 homed-modbus-arm64"

Build Linux Binary (armhf):
  extends: .build
  variables:
    ARCHITECTURE: armhf
    QT_BUILD: qt-arm-linux-gnueabihf-5.15.4-shared
    COMPILER: gcc-arm-linux-gnueabihf-8.3.0

Build OpenWRT Binary (aarch64_generic):
  extends: .build
  variables:
    ARCHITECTURE: aarch64_generic
    QT_BUILD: qt-aarch64_generic-openwrt-linux-5.15.4-shared
    COMPILER: gcc-aarch64_generic-openwrt-linux-8.4.0-musl

Build OpenWRT Binary (arm_cortex-a7_neon-vfpv4):
  extends: .build
  variables:
    ARCHITECTURE: arm_cortex-a7_neon-vfpv4
    QT_BUILD: qt-arm_cortex-a7_neon-vfpv4-openwrt-linux-5.15.4-shared
    COMPILER: gcc-arm_cortex-a7_neon-vfpv4-openwrt-linux-8.4.0-musl

Build OpenWRT Binary (arm_cortex-a9_neon):
  extends: .build
  variables:
    ARCHITECTURE: arm_cortex-a9_neon
    QT_BUILD: qt-arm_cortex-a9_neon-openwrt-linux-5.15.4-shared
    COMPILER: gcc-arm_cortex-a9_neon-openwrt-linux-8.4.0-musl

Build OpenWRT Binary (mips_24kc):
  extends: .build
  variables:
    ARCHITECTURE: mips_24kc
    QT_BUILD: qt-mips_24kc-openwrt-linux-5.15.4-shared
    COMPILER: gcc-mips_24kc-openwrt-linux-8.4.0-musl

Build OpenWRT Binary (mipsel_24kc):
  extends: .build
  variables:
    ARCHITECTURE: mipsel_24kc
    QT_BUILD: qt-mipsel_24kc-openwrt-linux-5.15.4-shared
    COMPILER: gcc-mipsel_24kc-openwrt-linux-8.4.0-musl

Deploy Docker Images:
  stage: deploy
  script:
  - "cp homed-modbus-amd64 deploy/docker/homed-modbus-amd64"
  - "cp homed-modbus-aarch64 deploy/docker/homed-modbus-arm64"
  - "cp homed-modbus-armhf deploy/docker/homed-modbus-arm"
  - "docker buildx create --driver-opt network=host --name job_${CI_JOB_ID} --use"
  - "docker buildx build --platform linux/arm64,linux/arm/v7,linux/amd64 --push --tag 127.0.0.1:5000/homed-modbus:${CI_COMMIT_TAG} --tag 127.0.0.1:5000/homed-modbus:latest deploy/docker/"
  - "docker buildx prune -af"
  - "docker buildx rm"
  rules:
  - if: $CI_COMMIT_TAG =~ /^\d.\d.\d+$/ || $CI_COMMIT_TAG == "dev"
    when: always
  - when: never

Deploy APT Package (amd64):
  extends: .deploy_apt
  variables:
    ARCHITECTURE: amd64

Deploy APT Package (aarch64):
  extends: .deploy_apt
  variables:
    ARCHITECTURE: aarch64

Deploy APT Package (arm64):
  extends: .deploy_apt
  variables:
    ARCHITECTURE: arm64

Deploy APT Package (armhf):
  extends: .deploy_apt
  variables:
    ARCHITECTURE: armhf

Deploy OpenWRT Package (aarch64_generic):
  extends: .deploy_opkg
  variables:
    ARCHITECTURE: aarch64_generic

Deploy OpenWRT Package (arm_cortex-a7_neon-vfpv4):
  extends: .deploy_opkg
  variables:
    ARCHITECTURE: arm_cortex-a7_neon-vfpv4

Deploy OpenWRT Package (arm_cortex-a9_neon):
  extends: .deploy_opkg
  variables:
    ARCHITECTURE: arm_cortex-a9_neon

Deploy OpenWRT Package (mips_24kc):
  extends: .deploy_opkg
  variables:
    ARCHITECTURE: mips_24kc

Deploy OpenWRT Package (mipsel_24kc):
  extends: .deploy_opkg
  variables:
    ARCHITECTURE: mipsel_24kc
